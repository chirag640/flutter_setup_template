name: Release Build

on:
  push:
    branches:
      - main # Triggers on push to main branch
  workflow_dispatch: # Allows manual trigger from GitHub Actions tab

jobs:
  # Job 1: Build Android APK and AAB
  build-android:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Java
        uses: actions/setup-java@v4
        with:
          distribution: "zulu"
          java-version: "17"
          cache: "gradle"

      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: "3.35.7"
          channel: "stable"
          cache: true

      - name: Cache pub dependencies
        uses: actions/cache@v4
        with:
          path: |
            ~/.pub-cache
            ${{ runner.tool_cache }}/flutter
          key: ${{ runner.os }}-pub-${{ hashFiles('**/pubspec.lock') }}
          restore-keys: |
            ${{ runner.os }}-pub-

      - name: Cache Gradle
        uses: actions/cache@v4
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Get dependencies
        run: flutter pub get

      - name: Build APK
        run: flutter build apk --release

      - name: Build App Bundle
        run: flutter build appbundle --release

      - name: Upload APK
        uses: actions/upload-artifact@v4
        with:
          name: android-apk
          path: build/app/outputs/flutter-apk/app-release.apk
          retention-days: 30

      - name: Upload AAB
        uses: actions/upload-artifact@v4
        with:
          name: android-aab
          path: build/app/outputs/bundle/release/app-release.aab
          retention-days: 30

  # Job 2: Build iOS IPA (requires macOS runner)
  build-ios:
    runs-on: macos-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: "3.35.7"
          channel: "stable"
          cache: true

      - name: Cache pub dependencies
        uses: actions/cache@v4
        with:
          path: |
            ~/.pub-cache
            ${{ runner.tool_cache }}/flutter
          key: ${{ runner.os }}-pub-${{ hashFiles('**/pubspec.lock') }}
          restore-keys: |
            ${{ runner.os }}-pub-

      - name: Cache CocoaPods
        uses: actions/cache@v4
        with:
          path: |
            ios/Pods
            ~/Library/Caches/CocoaPods
          key: ${{ runner.os }}-pods-${{ hashFiles('**/Podfile.lock') }}
          restore-keys: |
            ${{ runner.os }}-pods-

      - name: Get dependencies
        run: flutter pub get

      - name: Build iOS (no codesign)
        run: flutter build ios --release --no-codesign

      - name: Create IPA
        run: |
          mkdir -p Payload
          cp -r build/ios/iphoneos/Runner.app Payload/
          zip -r app-release.ipa Payload
          rm -rf Payload

      - name: Upload IPA
        uses: actions/upload-artifact@v4
        with:
          name: ios-ipa
          path: app-release.ipa
          retention-days: 30

  # Job 3: Build Windows
  build-windows:
    runs-on: windows-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: "3.35.7"
          channel: "stable"
          cache: true

      - name: Cache pub dependencies
        uses: actions/cache@v4
        with:
          path: |
            ~\AppData\Local\Pub\Cache
            ${{ runner.tool_cache }}\flutter
          key: ${{ runner.os }}-pub-${{ hashFiles('**/pubspec.lock') }}
          restore-keys: |
            ${{ runner.os }}-pub-

      - name: Get dependencies
        run: flutter pub get

      - name: Build Windows
        run: flutter build windows --release

      - name: Create Windows ZIP
        run: |
          Compress-Archive -Path build\windows\x64\runner\Release\* -DestinationPath windows-release.zip

      - name: Upload Windows Build
        uses: actions/upload-artifact@v4
        with:
          name: windows-release
          path: windows-release.zip
          retention-days: 30

  # Job 4: Build Linux
  build-linux:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install Linux dependencies
        run: |
          sudo apt-get update -y
          sudo apt-get install -y ninja-build libgtk-3-dev

      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: "3.35.7"
          channel: "stable"
          cache: true

      - name: Cache pub dependencies
        uses: actions/cache@v4
        with:
          path: |
            ~/.pub-cache
            ${{ runner.tool_cache }}/flutter
          key: ${{ runner.os }}-pub-${{ hashFiles('**/pubspec.lock') }}
          restore-keys: |
            ${{ runner.os }}-pub-

      - name: Get dependencies
        run: flutter pub get

      - name: Build Linux
        run: flutter build linux --release

      - name: Create Linux TAR
        run: |
          cd build/linux/x64/release/bundle
          tar -czf ../../../../../linux-release.tar.gz *

      - name: Upload Linux Build
        uses: actions/upload-artifact@v4
        with:
          name: linux-release
          path: linux-release.tar.gz
          retention-days: 30

  # Job 5: Build macOS
  build-macos:
    runs-on: macos-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: "3.35.7"
          channel: "stable"
          cache: true

      - name: Cache pub dependencies
        uses: actions/cache@v4
        with:
          path: |
            ~/.pub-cache
            ${{ runner.tool_cache }}/flutter
          key: ${{ runner.os }}-pub-${{ hashFiles('**/pubspec.lock') }}
          restore-keys: |
            ${{ runner.os }}-pub-

      - name: Cache CocoaPods
        uses: actions/cache@v4
        with:
          path: |
            macos/Pods
            ~/Library/Caches/CocoaPods
          key: ${{ runner.os }}-pods-macos-${{ hashFiles('**/Podfile.lock') }}
          restore-keys: |
            ${{ runner.os }}-pods-macos-

      - name: Get dependencies
        run: flutter pub get

      - name: Build macOS
        run: flutter build macos --release

      - name: Create macOS ZIP
        run: |
          cd build/macos/Build/Products/Release
          zip -r ../../../../../macos-release.zip setup.app

      - name: Upload macOS Build
        uses: actions/upload-artifact@v4
        with:
          name: macos-release
          path: macos-release.zip
          retention-days: 30

  # Job 6: Create GitHub Release
  create-release:
    needs: [build-android, build-ios, build-windows, build-linux, build-macos]
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: artifacts

      - name: Get version from pubspec.yaml
        id: get_version
        run: |
          VERSION=$(grep '^version: ' pubspec.yaml | cut -d ' ' -f 2 | cut -d '+' -f 1)
          echo "VERSION=v$VERSION" >> $GITHUB_OUTPUT
          echo "Building version: v$VERSION"

      - name: Check if release exists
        id: check_release
        run: |
          if gh release view ${{ steps.get_version.outputs.VERSION }} >/dev/null 2>&1; then
            echo "exists=true" >> $GITHUB_OUTPUT
          else
            echo "exists=false" >> $GITHUB_OUTPUT
          fi
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Delete existing release if exists
        if: steps.check_release.outputs.exists == 'true'
        run: |
          gh release delete ${{ steps.get_version.outputs.VERSION }} -y
          git push origin :refs/tags/${{ steps.get_version.outputs.VERSION }} || true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ steps.get_version.outputs.VERSION }}
          name: Release ${{ steps.get_version.outputs.VERSION }}
          draft: false
          prerelease: false
          generate_release_notes: true
          files: |
            artifacts/android-apk/app-release.apk
            artifacts/android-aab/app-release.aab
            artifacts/ios-ipa/app-release.ipa
            artifacts/windows-release/windows-release.zip
            artifacts/linux-release/linux-release.tar.gz
            artifacts/macos-release/macos-release.zip
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
